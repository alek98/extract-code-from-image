    @Override
    public void subscribe(Long id) {

        AuthenticatedUser user = (AuthenticatedUser) SecurityContextHolder.getContext().getAuthentication()
                .getPrincipal();

        CulturalHeritage ch = culturalHeritageRepository.findById(id).orElse(null);

        if (null == ch)
            throw new EntityNotFoundException();

        user.getCulturalHeritages().add(ch);

        authenticatedUserService.update(user);
    }
    
    @Override
    public Page<CulturalHeritage> filter(FilterRequestDTO filterDTO, Pageable page) {

        Page<CulturalHeritage> res;
        System.out.println("OVO SAM DOBIO ZA NAME "+ filterDTO.getValue());

        if (filterDTO.getType().equalsIgnoreCase("name")) {
            res = culturalHeritageRepository.findByNameContainsAllIgnoreCase(filterDTO.getValue(), page);
        } else if (filterDTO.getType().equalsIgnoreCase("chSubtypeName")) {
            res = culturalHeritageRepository.findByChsubtypeNameContainsAllIgnoreCase(filterDTO.getValue(), page);
        } else if (filterDTO.getType().equalsIgnoreCase("locationCity")) {
            res = culturalHeritageRepository.findByLocationCityAllIgnoreCase(filterDTO.getValue(), page);
        } else if (filterDTO.getType().equals("locationCountry")) {
            res = culturalHeritageRepository.findByLocationCountryAllIgnoreCase(filterDTO.getValue(), page);
        } else {
            res = culturalHeritageRepository.findAll(page);
        }
        return res;
    }